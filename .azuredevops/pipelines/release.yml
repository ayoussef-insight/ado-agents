trigger:
  branches:
    include:
      - main
  paths:
    include:
      - infrastructure/aci

pool:
  vmImage: ubuntu-latest

variables:
  - template: vars/env.yml
  - name: ROOT
    value: $(Build.SourcesDirectory)/infrastructure/aci
  - name: INSTANCES_COUNT
    value: 2

jobs:
  - job: agent_aci
    displayName: Launch Agent Container Instance
    steps:
      - template: ps-rule.yaml
        parameters:
          templateName: 'ACI'
          inputPath: $(ROOT)/.test
          errorAction: stop

      - task: AzureCLI@2
        displayName: Deploy Linux Agent ACI
        inputs:
          azureSubscription: $(AZURE_CONNECTION)
          scriptType: bash
          scriptLocation: inlineScript
          inlineScript: |
            # get the ACR password
            user=$(ACR_NAME)
            password=$(az acr credential show -n $user --query "passwords[0].value" -o tsv)

            environmentVariables='[
              {"name":"AZP_TOKEN","secureValue":"$(AZP_PAT)"},
              {"name":"AZP_URL","value":"$(AZP_URL)"},
              {"name":"AZP_POOL","value":"$(AZP_LNX_POOL)"}
            ]'

            [ -n "$(DNS_SERVERS)" ] && dnsServers="$(DNS_SERVERS)" || dnsServers="[]"

            # deploy ACI
            az deployment group create \
              --resource-group $(AZURE_RG) \
              --template-file $(ROOT)/main.bicep \
              --parameters $(ROOT)/main.parameters.json \
              --parameters name=$(LNX_ACI_NAME) \
                          image=$(LNX_IMAGE_NAME) \
                          imageServer=$(ACR_SERVER) \
                          imageServerUsername="$user" \
                          imageServerPassword="$password" \
                          instances=$(INSTANCES_COUNT) \
                          environmentVariables="$environmentVariables" \
                          dnsServers="$dnsServers" \
                          subnetResourceId="$(SUBNET_ID)"
