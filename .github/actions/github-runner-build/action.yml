name: Github Actions Runner Build
description: Deploys ACR, Builds github actions runner container image and push to ACR

inputs:
  AZURE_CREDENTIALS:
    description: 'AZURE_CREDENTIALS'
    required: true
  ACR_NAME:
    description: 'ACR_NAME'
    required: true
  AZURE_RG:
    description: 'AZURE_RG'
    required: true
  ROOT:
    description: 'ROOT'
    required: true
  LNX_RUNNER_ROOT:
    description: 'LNX_RUNNER_ROOT'
    required: true
  LNX_IMAGE_NAME:
    required: true
    description: LNX_IMAGE_NAME    
  IMAGE_VERSION:
    description: 'IMAGE_VERSION'
    required: true
  ACR_SERVER:
    description: ACR_SERVER
    required: true

runs:
  using: "composite"
  steps:
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ inputs.AZURE_CREDENTIALS }}

    - name: Deploy ACR
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
              az deployment group create  \
              --resource-group ${{ inputs.AZURE_RG }} \
              --template-file ${{ inputs.ROOT }}/main.bicep \
              --parameters ${{ inputs.ROOT }}/main.parameters.json \
              --parameters acrName=${{ inputs.ACR_NAME }}

    - name: Get registry credentials
      id: acr_credentials
      uses: ./.github/actions/acr-credentials
      with:
        ACR_NAME: ${{ inputs.ACR_NAME }}
    
    - name: 'Docker login'
      shell: bash
      run: docker login ${{ inputs.ACR_SERVER }} -u ${{ steps.acr_credentials.outputs.ACR_USERNAME }} -p ${{ steps.acr_credentials.outputs.ACR_PASSWORD }}

    - name: 'Build & Push image'
      shell: bash
      run: |
          cd ${{ inputs.LNX_RUNNER_ROOT }}
          docker-compose up --build --detach
          docker tag ${{ inputs.LNX_IMAGE_NAME }}:latest ${{ inputs.ACR_SERVER }}/${{ inputs.LNX_IMAGE_NAME }}:${{ inputs.IMAGE_VERSION }}
          docker tag ${{ inputs.LNX_IMAGE_NAME }}:latest ${{ inputs.ACR_SERVER }}/${{ inputs.LNX_IMAGE_NAME }}:latest
          docker image push --all-tags ${{ inputs.ACR_SERVER }}/${{ inputs.LNX_IMAGE_NAME }}
